billboard <- read_csv(here("Data/billboard_clean.csv"))
library(tidyverse)
library(mosaic)
library(foreach)
library(modelr)
library(rsample)
data(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
# baseline medium model with 11 main effects
lm_medium = lm(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=saratoga_train)
### forward selection
lm0 = lm(price ~ 1, data=saratoga_train)
lm_forward = step(lm0, direction='forward',
scope=~(lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir)^2)
# backward selection?
lm_big = lm(price ~ (lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir +
landValue + sewer + newConstruction + waterfront)^2, data= saratoga_train)
drop1(lm_big)
# stepwise selection
# note that we start with a reasonable guess
lm_step = step(lm_medium,
scope=~(.)^2)
# what variables are included?
getCall(lm_step)
coef(lm_step)
rmse(lm_medium, saratoga_test)
rmse(lm_big, saratoga_test)
rmse(lm_forward, saratoga_test)
rmse(lm_step, saratoga_test)
View(saratoga_test)
# Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
# baseline medium model with 11 main effects
lm_medium = lm(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=saratoga_train)
### forward selection
lm0 = lm(price ~ 1, data=saratoga_train)
lm_forward = step(lm0, direction='forward',
scope=~(lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir)^2)
# backward selection?
lm_big = lm(price ~ (lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir +
landValue + sewer + newConstruction + waterfront)^2, data= saratoga_train)
drop1(lm_big)
# stepwise selection
# note that we start with a reasonable guess
lm_step = step(lm_medium,
scope=~(.)^2)
# the scope statement says:
# "consider all two-way interactions for everything in lm_medium (.)
# what variables are included?
getCall(lm_step)
coef(lm_step)
rmse(lm_medium, saratoga_test)
rmse(lm_big, saratoga_test)
rmse(lm_forward, saratoga_test)
rmse(lm_step, saratoga_test)
# Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
# baseline medium model with 11 main effects
lm_medium = lm(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=saratoga_train)
### forward selection
lm0 = lm(price ~ 1, data=saratoga_train)
lm_forward = step(lm0, direction='forward',
scope=~(lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir)^2)
# backward selection?
lm_big = lm(price ~ (lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir +
landValue + sewer + newConstruction + waterfront)^2, data= saratoga_train)
drop1(lm_big)
# stepwise selection
# note that we start with a reasonable guess
lm_step = step(lm_medium,
scope=~(.)^2)
# the scope statement says:
# "consider all two-way interactions for everything in lm_medium (.)
# what variables are included?
getCall(lm_step)
coef(lm_step)
rmse(lm_medium, saratoga_test)
rmse(lm_big, saratoga_test)
rmse(lm_forward, saratoga_test)
rmse(lm_step, saratoga_test)
capmetro_UT <- read.csv(here(/data/campmetro_UT.csv))
capmetro_UT <- read.csv(here('/data/campmetro_UT.csv'))
capmetro_UT <- read.csv(here("data/campmetro_UT.csv"))
capmetro_UT <- read.csv(here("Data/campmetro_UT.csv"))
capmetro_UT <- read.csv(here("Data/capmetro_UT.csv"))
View(capmetro_UT)
capmetro_rev <- capmetro_UT %>%
group_by(hour_of_day) %>%
summarize(avg_boarding = mean(boarding))
View(capmetro_rev)
capmetro_rev <- capmetro_UT %>%
group_by(hour_of_day, day_of_week, month) %>%
summarize(avg_boarding = mean(boarding))
View(capmetro_rev)
ggplot(capmetro_rev) +
geom_line(aes(x=hour_of_day, y=avg_boarding)) +
facet_wrap(~day_of_week)
ggplot(capmetro_rev) +
geom_line(aes(x=hour_of_day, y=avg_boarding, color=month)) +
facet_wrap(~day_of_week)
capmetro_UT = mutate(capmetro_UT,
day_of_week = factor(day_of_week,
levels=c("Mon", "Tue", "Wed","Thu", "Fri", "Sat", "Sun")),
month = factor(month,
levels=c("Sep", "Oct","Nov")))
capmetro_rev <- capmetro_UT %>%
group_by(hour_of_day, day_of_week, month) %>%
summarize(avg_boarding = mean(boarding))
ggplot(capmetro_rev) +
geom_line(aes(x=hour_of_day, y=avg_boarding, color=month)) +
facet_wrap(~day_of_week)
library(lubridate)
?lubridate
capmetro_time <- capmetro_UT %>%
parse_date_time(timestamp)
capmetro_time <- capmetro_UT %>%
ymd_hms(
...,
quiet = FALSE,
tz = "UTC",
locale = Sys.getlocale("LC_TIME"),
truncated = 0
)
capmetro_time <- capmetro_UT %>%
ymd_hms(
timestamp,
quiet = FALSE,
tz = "UTC",
locale = Sys.getlocale("LC_TIME"),
truncated = 0
)
capmetro_time <- capmetro_UT %>%
ymd_hms(
timestamp
)
capmetro_time <- capmetro_UT %>%
as_string(timestamp)
capmetro_UT <- capmetro_UT %>%
mutate(timestamp = as_string(timestamp))
capmetro_UT <- capmetro_UT %>%
mutate(timestamp = as.string(timestamp))
capmetro_UT <- capmetro_UT %>%
mutate(timestamp = as.numeric(timestamp))
capmetro_UT <- read.csv(here("Data/capmetro_UT.csv"))
capmetro_UT <- mutate(capmetro_UT,
day_of_week = factor(day_of_week,
levels=c("Mon", "Tue", "Wed","Thu", "Fri", "Sat", "Sun")),
month = factor(month,
levels=c("Sep", "Oct","Nov")))
capmetro_UT <- mutate(capmetro_UT,
day_of_week = factor(day_of_week,
levels=c("Mon", "Tue", "Wed","Thu", "Fri", "Sat", "Sun")),
month = factor(month,
levels=c("Sep", "Oct","Nov")),
date = ymd_hms($timestamp))
capmetro_UT <- mutate(capmetro_UT,
day_of_week = factor(day_of_week,
levels=c("Mon", "Tue", "Wed","Thu", "Fri", "Sat", "Sun")),
month = factor(month,
levels=c("Sep", "Oct","Nov")),
date = ymd_hms(timestamp))
capmetro_scatter <- capmetro_UT %>%
group_by(hour(date), hour_of_day)
View(capmetro_UT)
View(capmetro_rev)
View(capmetro_scatter)
capmetro_scatter <- capmetro_UT %>%
group_by(hour_of_day)
View(capmetro_rev)
View(capmetro_scatter)
ggplot(capmetro_scatter) +
geom_point(aes(x=temperature, y=boarding, color=weekend)) +
facet_wrap(~hour_of_day)
ggplot(capmetro_UT) +
geom_point(aes(x=temperature, y=boarding, color=weekend)) +
facet_wrap(~hour_of_day)
data(SaratogaHouses)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
glimpse(SaratogaHouses)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm2 = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm2, saratoga_test)
lm_medium = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
rmse(lm_medium, saratoga_test)
View(SaratogaHouses)
lm_better = lm(price ~ . - pctCollege - sewer - newConstruction, data=saratoga_train)
rmse(lm_better, saratoga_test)
# baseline medium model with 11 main effects
lm_medium = lm(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=saratoga_train)
rmse(lm_medium, saratoga_test)
glimpse(SaratogaHouses)
# feature matrices
Xtrain = model.matrix(~ . - 1, data=saratoga_train)
Xtest = model.matrix(~ . - 1, data=saratoga_test)
# feature matrices
xtrain = model.matrix(~ . - 1, data=saratoga_train)
xtest = model.matrix(~ . - 1, data=saratoga_test)
ytrain = saratoga_train$price
ytrain = saratoga_test$price
# rescale
scale_train = apply(xtrain, 2, sd)
xtilde_train = scale(xtrain, scale = scale_train)
xtilde_test = scale(xtest, scale = scale_train)
head(xtrain, 2)
head(xtilde_train)
err = rmse(knnreg(price ~ ., data=xtilde_train, k=i),xtilde_test)
library(foreach)
library(caret)
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ ., data=xtilde_train, k=i),xtilde_test)
}%>% as.data.frame()
err = rmse(knnreg(price ~ lotSize, data=xtilde_train, k=i),xtilde_test)
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ lotSize, data=xtilde_train, k=i),xtilde_test)
}%>% as.data.frame()
err = rmse(knnreg(price ~ lotSize, data=saratoga_train, k=i),saratoga_test)
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ lotSize, data=saratoga_train, k=i),saratoga_test)
}%>% as.data.frame()
View(knn_saratoga)
View(xtrain)
View(xtilde_test)
xtilde_train = scale(xtrain, scale = scale_train) %>%
as.data.frame()
View(xtilde_train)
xtilde_test = scale(xtest, scale = scale_train) %>%
as.data.frame()
err = rmse(knnreg(price ~ lotSize, data=xtilde_train, k=i),xtilde_test)
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ ., data=xtilde_train, k=i),xtilde_test)
}%>% as.data.frame()
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=xtilde_train, k=i),xtilde_test)
}%>% as.data.frame()
err = rmse(knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + fuel + centralAir, data=xtilde_train, k=i),xtilde_test)
err = rmse(knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + centralAir, data=xtilde_train, k=i),xtilde_test)
err = rmse(knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms, data=xtilde_train, k=i),xtilde_test)
View(knn_saratoga)
?knnreg
knn_saratoga = foreach(i = 2:100, .combine='rbind') %do% {
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + 'heatinghot air' + 'heatinghot water/steam' + heatingelectric + fuelelectric + fueloil, data=xtilde_train, k=i),xtilde_test)
}%>% as.data.frame()
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatingelectric + fuelelectric + fueloil, data=xtilde_train, k=i),xtilde_test)
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + "heatinghot air" + "heatinghot water/steam" + heatingelectric + fuelelectric + fueloil, data=xtilde_train, k=i),xtilde_test)
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatingelectric + fuelelectric + fueloil, data=xtilde_train, k=i),xtilde_test)
xtilde_train = scale(xtrain, scale = scale_train) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air")
xtilde_train = scale(xtrain, scale = scale_train) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air", heatinghot_water/steam = "heatinghot water/steam")
xtilde_train = scale(xtrain, scale = scale_train) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water/steam = "heatinghot water/steam")
xtilde_train = scale(xtrain, scale = scale_train) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
xtilde_test = scale(xtest, scale = scale_train) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatingelectric + heatinghot_air + heatinghot_water_steam + fuelelectric + fueloil, data=xtilde_train, k=i),xtilde_test)
View(knn_saratoga)
err = rmse(knnreg(price ~ lotSize + age + +landValue + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatingelectric + heatinghot_air, data=xtilde_train, k=i),xtilde_test)
# Cross validating with the K-Folds approach
xtilde_folds = crossv_kfold(SaratogaHouses, k=K_folds)
K_folds = 5
k_grid = c(2:30,35,40,45,50,55,60,65,70,80, 90,100)
# Cross validating with the K-Folds approach
xtilde_folds = crossv_kfold(SaratogaHouses, k=K_folds)
View(xtilde_folds)
?crossv_kfold
test = xtilde_folds$test$'1'
View(test)
test = xtilde_folds$test$'1' %>%  as.data.frame()
View(test)
?apply
test1 = saratoga_folds$test$'1' %>%
as.data.frame() %>%
scale(center = FALSE, scale = TRUE)
# Cross validating with the K-Folds approach
saratoga_folds = crossv_kfold(SaratogaHouses, k=K_folds)
test1 = saratoga_folds$test$'1' %>%
as.data.frame() %>%
scale(center = FALSE, scale = TRUE)
test1 = saratoga_folds$test$'1' %>%
as.matrix()
View(test1)
test1 = saratoga_folds$test$'1' %>%
model.matrix(~ . - 1)
test1 = saratoga_folds$test$'1' %>%
as.data.frame()
xtest = model.matrix(~ . - 1, data=test1)
test1 = saratoga_folds$test$'1' %>%
as.data.frame() %>%
model.matrix(~ . - 1, data=test1)
test1 = saratoga_folds$test$'1' %>%
as.data.frame() %>%
model.matrix(~ . - 1)
test1 = saratoga_folds$test$'1' %>%
as.data.frame()
xtest = model.matrix(~ . - 1, data=test1)
train1 = saratoga_folds$train$'1' %>%
as.data.frame()
scale_train1 = apply(xtrain1, 2, sd)
xtrain1 = model.matrix(~ . - 1, data=train1)
scale_train1 = apply(xtrain1, 2, sd)
xtilde_train = scale(xtrain1, scale = scale_train1) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
xtilde_train1 = scale(xtrain1, scale = scale_train1) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
View(xtilde_train1)
# Cross validating with the K-Folds approach
saratoga_folds = crossv_kfold(SaratogaHouses, k=K_folds)
# Plotting our RMSE averages versus K
ggplot(cv_grid_350) +
geom_point(aes(x=k, y=err))+
scale_x_log10()+
geom_errorbar(aes(x=k, ymin = err-std_err, ymax = err+std_err)) +
labs(title = "350 Trim: RMSE for Different K Values\n", x = "K", y = "RMSE") +
theme_classic()
saratoga_folds = crossv_kfold(SaratogaHouses, k=K_folds)
cv_grid = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
# Plotting our RMSE averages versus K
ggplot(cv_grid) +
geom_point(aes(x=k, y=err))+
scale_x_log10()+
geom_errorbar(aes(x=k, ymin = err-std_err, ymax = err+std_err)) +
labs(title = "350 Trim: RMSE for Different K Values\n", x = "K", y = "RMSE") +
theme_classic()
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = TRUE)
?scale
saratoga_scaled <- scale(SaratogaHouses, center = FALSE)
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = apply(SaratogaHouses, 2, sd))
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = apply(SaratogaHouses, 2, sd), na.rm = TRUE)
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = apply(SaratogaHouses, 2, sd, na.rm = TRUE))
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = apply(SaratogaHouses, 2, sd, na.rm = FALSE))
saratoga_scaled <- scale(SaratogaHouses)
saratoga_matrix = model.matrix(~ . - 1, data=SaratogaHouses)
View(saratoga_matrix)
saratoga_scaled <- scale(SaratogaHouses, center = FALSE, scale = apply(SaratogaHouses, 2, sd))
saratoga_scaled <- scale(saratoga_matrix, center = FALSE, scale = apply(saratoga_matrix, 2, sd))
View(saratoga_scaled)
saratoga_folds2 = crossv_kfold(saratoga_scaled, k=K_folds)
saratoga_scaled <- scale(saratoga_matrix, center = FALSE, scale = apply(saratoga_matrix, 2, sd)) %>%
as.data.frame()
saratoga_folds2 = crossv_kfold(saratoga_scaled, k=K_folds)
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
cv_grid2 = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
saratoga_scaled <- scale(saratoga_matrix, center = FALSE, scale = apply(saratoga_matrix, 2, sd)) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam + fuel + centralAir, k=k, data = ., use.all=FALSE))
cv_grid2 = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam + fuel + centralAir, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
saratoga_scaled <- scale(saratoga_matrix, center = FALSE, scale = apply(saratoga_matrix, 2, sd)) %>%
as.data.frame() %>%
rename(heatinghot_air = "heatinghot air") %>%
rename(heatinghot_water_steam = "heatinghot water/steam")
saratoga_folds2 = crossv_kfold(saratoga_scaled, k=K_folds)
cv_grid2 = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam + fuel + centralAir, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam + centralAir, k=k, data = ., use.all=FALSE))
cv_grid2 = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam + centralAir, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
cv_grid2 = foreach(k = k_grid, .combine='rbind') %dopar% {
models = map(saratoga_folds2$train, ~ knnreg(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heatinghot_air + heatinghot_water_steam, k=k, data = ., use.all=FALSE))
errs = map2_dbl(models, saratoga_folds2$test, modelr::rmse)
c(k=k, err = mean(errs), std_err = sd(errs)/sqrt(K_folds))
} %>% as.data.frame
ggplot(cv_grid2) +
geom_point(aes(x=k, y=err))+
scale_x_log10()+
geom_errorbar(aes(x=k, ymin = err-std_err, ymax = err+std_err)) +
labs(title = "350 Trim: RMSE for Different K Values\n", x = "K", y = "RMSE") +
theme_classic()
gc()
