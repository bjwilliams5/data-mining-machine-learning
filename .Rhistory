ggplot(data = exp1, aes(x=stories, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red')
lmrent_stories = lm(rentdiff ~ exp1$stories, data = exp1)
new_data2 = data.frame(size = c(15))
predict(lmrent_stories, new_data2)
new_data = data.frame(size = c(250000))
predict(lmrent, new_data)
new_data = data.frame(size = c(15))
predict(lmrent_stories, new_data)
lmrent_stories = lm(Rent ~ stories, data = exp1)
new_data = data.frame(size = c(15))
predict(lmrent_stories, new_data)
lmrent_stories = lm(exp1$Rent ~ exp1$stories)
lmrent_stories = lm(exp1$Rent ~ exp1$stories)
new_data = data.frame(size = c(15))
predict(lmrent_stories, new_data)
lmrent_stories = lm(exp1$Rent ~ exp1$stories)
new_data = data.frame(size = c(15))
predict(lmrent_stories, new_data)
(exp1$Rent ~ exp1$stories)
lmrent_stories = lm(exp1$Rent ~ exp1$stories)
new_data = data.frame(size = c(15))
predict(lmrent_stories, new_data)
ggplot(data = exp1, aes(x=stories, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 15)
ggplot(data = exp1, aes(x=cd.total.07, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
ggplot(data = exp1, aes(x=cd_total_07, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
n(nongreen$class_a)/sum(nongreen)
sum(nongreen$class_a)/sum(nongreen)
count(nongreen$class_a)/count(nongreen)
sum(nongreen$class_a)/n(nongreen)
mean(nongreen$class_a)
mean(nongreen$class_b)
mean(nongreen$class_a)
mean(exp1$class_a)
exp2 = greenbuildings %>%
filter(class_a == 1)
View(exp2)
exp2 = greenbuildings %>%
filter(class_a == 1) %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(green_rating == 1)
filter(class_a == 1) %>%
filter(green_rating == 1) %>%
exp2 = greenbuildings %>%
filter(class_a == 1) %>%
filter(green_rating == 1)
exp2 = greenbuildings %>%
filter(class_a == 1, green_rating == 1)
View(exp2)
exp2 = greenbuildings %>%
filter(class_a == 1, green_rating == 1) %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent)
exp2 = greenbuildings %>%
filter(class_a == 1, green_rating == 1)
exp2 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_a == 1, green_rating == 1)
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
lmrent_classa = lm(rentdiff ~ size, data = exp2)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
exp3 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_b == 1, green_rating == 1)
ggplot(data = exp3, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
lmrent_classa = lm(rentdiff ~ size, data = exp3)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
ggplot(data = exp1, aes(x=size, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 250000)
ggplot(data = exp3, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(Title = "Difference in Rent in Same Geographic Cluster",
x = "Rent Difference"
)
ggplot(data = exp3, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(Title = "Difference in Rent in Same Geographic Cluster",
x = "Rent Difference"
)
ggplot(data = exp1, aes(x=size, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 250000) +
labs(title = "Difference in Rent in Same Geographic Cluster",
y = "Rent Difference")
ggplot(data = exp1, aes(x=size, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 250000) +
labs(title = "Difference in Rent in Same Geographic Cluster",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp1, aes(x=size, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 250000) +
labs(title = "Difference in Average Rent in Same Geographic Cluster",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
lmrent = lm(rentdiff ~ size, data = exp1)
new_data = data.frame(size = c(250000))
predict(lmrent, new_data)
ggplot(data = exp1, aes(x=stories, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 15)
labs(title = "Difference in Average Rent in Same Geographic Cluster",
y = "Rent Difference ($ per square ft)",
x = "Stories")
ggplot(data = exp1, aes(x=stories, y=rentdiff)) +
geom_point(color = 'blue') +
geom_smooth(method='lm', se = FALSE, color = 'red') +
geom_vline(xintercept = 15) +
labs(title = "Difference in Average Rent in Same Geographic Cluster",
y = "Rent Difference ($ per square ft)",
x = "Stories")
nongreen = greenbuildings %>%
filter(green_rating == 0)
nongreen_median = median(nongreen$age)
green_median = median(exp1$age)
nongreen_median
green_median
ggplot(data = greenbuildings, aes(x=age, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
ggplot(data = greenbuildings, aes(x=age, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Rent Over Time",
y = "Rent ($ per sq ft)",
x = "Age (years)")
ggplot(data = greenbuildings, aes(x=age, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Rent Over Time (Green and Non-Green Buildings)",
y = "Rent ($ per sq ft)",
x = "Age (years)")
ggplot(data = exp1, aes(x=age, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Rent Over Time (Green Buildings Only)",
y = "Rent ($ per sq ft)",
x = "Age (years)")
ggplot(data = exp1, aes(x=cd_total_07, y=Rent)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
mean(nongreen$class_a)
mean(exp1$class_a)
exp2 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_a == 1, green_rating == 1)
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
lmrent_classa = lm(rentdiff ~ size, data = exp2)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
exp2 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_a == 1, green_rating == 1)
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
lmrent_classa = lm(rentdiff ~ size, data = exp2)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
exp2 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_a == 1, green_rating == 1)
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE)
lmrent_classa = lm(rentdiff ~ size, data = exp2)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
exp3 = greenbuildings %>%
mutate(greenbuildings, rentdiff = Rent - cluster_rent) %>%
filter(class_b == 1, green_rating == 1)
ggplot(data = exp3, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp2, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp3, aes(x=size, y=rentdiff)) +
geom_point(color = 'black') +
geom_smooth(method='lm', se = FALSE) +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class B Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
lmrent_classb = lm(rentdiff ~ size, data = exp3)
new_data = data.frame(size = c(250000))
predict(lmrent_classb, new_data)
lmrent_classa = lm(rentdiff ~ size, data = exp2)
new_data = data.frame(size = c(250000))
predict(lmrent_classa, new_data)
mean(nongreen$leasing_rate)
mean(exp1$leasing_rate
mean(nongreen$leasing_rate)
mean(exp1$leasing_rate)
mean(nongreen$leasing_rate)
mean(exp1$leasing_rate)
mutate(greenbuildings, green = ifelse(green_rating == 1, 'Green', 'Non-Green')
exp4 = greenbuildings %>%
exp4 = greenbuildings %>%
mutate(greenbuildings, green = ifelse(green_rating == 1, "Green", "Non-Green")
exp4 = greenbuildings %>%
exp4 = greenbuildings %>%
mutate(greenbuildings, green = ifelse(green_rating == 1, 'Green', 'Non-Green'))
View(exp4)
ggplot(data = greenbuildings, aes(x=green, y=mean(leasing_rate))) +
geom_col(color = 'black') +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp4, aes(x=green, y=mean(leasing_rate))) +
geom_col(color = 'black') +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp4, aes(x=green, y=median(leasing_rate))) +
geom_col(color = 'black') +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp4)) +
ggplot(data = exp4) +
geom_col(aes(x=green, y=median(leasing_rate)), color = 'black') +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp4, aes(x=green, y=median(leasing_rate))) +
geom_col(color = 'black') +
stat_summary(fun.y=mean) +
labs(title = "Difference in Average Rent in Same Geographic Cluster (Class A Buildings)",
y = "Rent Difference ($ per square ft)",
x = "Size (sq ft)")
ggplot(data = exp4, aes(x=green, y=mean(leasing_rate))) +
geom_col(color = 'black') +
stat_summary(fun.y=mean)
ggplot(data = exp4) +
geom_bar(aes((green, leasing_rate),
ggplot(data = exp4) +
geom_bar(aes((green, leasing_rate),
ggplot(data = exp4, aes((green, leasing_rate))) +
ggplot(data = exp4, aes((x = green, y = leasing_rate))) +
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "mean")
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "median")
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "mean")
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "mean") +
labs(title = "Leasing Rate for Green / Non-Green Buildings",
y = "Leasing Rate (%)",
x = "Green Certification")
exp4 = greenbuildings %>%
mutate(greenbuildings, green = ifelse(green_rating == 1, 'Green', 'Non-Green')) %>%
mutate(greenbuildings, classtype = ifelse(class_a == 1, 'A',
ifelse(class_b == 1, 'B', 'C')))
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~classtype) +
labs(title = "Leasing Rate for Green / Non-Green Buildings",
y = "Leasing Rate (%)",
x = "Green Certification")
ggplot(data = exp4) +
geom_bar(aes(x = green, y = leasing_rate),
position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~classtype) +
labs(title = "Leasing Rate for Green / Non-Green Buildings By Class Type",
y = "Leasing Rate (%)",
x = "Green Certification")
library(mosaic)
library(ggplot2)
lambda <- c(12, 18, 15, 8, 17, 13, 22, 13, 13, 13, 12, 11, 15, 15, 12, 8, 20, 12, 14, 11, 9, 15, 16, 20, 9, 15, 13, 19, 18, 14)
summarize(lambda)
n(lambda)
lambda <- c(12, 18, 15, 8, 17, 13, 22, 13, 13, 13, 12, 11, 15, 15, 12, 8, 20, 12, 14, 11, 9, 15, 16, 20, 9, 15, 13, 19, 18, 14)
head(lambda)
new_data = data.frame(FoodScore = c(6.5, 7.5, 9.0))
View(new_data2)
View(new_data2)
View(new_data)
lambda = data.frame(counts = c(12, 18, 15, 8, 17, 13, 22, 13, 13, 13, 12, 11, 15, 15, 12, 8, 20, 12, 14, 11, 9, 15, 16, 20, 9, 15, 13, 19, 18, 14))
head(lambda)
n(lambda)
count(lambda)
mean(lambda)
mean(lambda$counts)
selambda = sqrt(mean(lambda$counts)/30)
# contruct a bootstrapped sample
lambda_boot = resample(lambda)
stics for the bootstrapped sample
table3_boot = lambda_boot %>%
summarize(mean(counts)
table3_boot = lambda_boot %>%
summarize(mean(counts)
# contruct a bootstrapped sample
lambda_boot = resample(lambda)
mean(lambda$counts)
lambda_boot = resample(lambda)
table3_boot = lambda_boot %>%
summarize(mean(counts))
View(table3_boot)
View(table3_boot)
boot3 = do(1000)*{
# contruct a bootstrapped sample
lambda_boot = resample(lambda)
# recalculate the statistics for the bootstrapped sample
table3_boot = lambda_boot %>%
summarize(mean(counts))
# return the result of interest
table2_boot$`mean(counts)`
}
boot3 = do(1000)*{
# contruct a bootstrapped sample
lambda_boot = resample(lambda)
# recalculate the statistics for the bootstrapped sample
table3_boot = lambda_boot %>%
summarize(mean(counts))
# return the result of interest
table3_boot$`mean(counts)`
}
head(boot3)
confint(boot3)
sd(boot3)
sd(boot3)
sd(boot3)
head(boot3)
sd(boot3$result)
confint(boot3$result)
stocks <- read.csv("~/R/Working Directory/stocks_bonds.csv")
head(stocks)
mean(stocks$SP500)
confint(stocks$SP500)
z_crit = qnorm(1 - alpha/2)
z_crit = qnorm(1 - .05/2)
z_crit
stockmean = mean(stocks$SP500)
stocksd = sd(stocks$SP500)
qnorm(-.1, mean = stockmean, sd = stocksd)
library(mosaic)
library(ggplot2)
stocks <- read.csv("~/R/Working Directory/stocks_bonds.csv")
View(stocks)
stocks = stocks %>%
mutate(lessthan10 = ifelse(SP500 =< -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse("SP500" =< -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse("SP500" < -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse("SP500" <= -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse("SP500" < -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse('SP500' < -.1, 'yes', 'no'))
head(stocks)
stocks = stocks %>%
mutate(lessthan10 == ifelse('SP500' < -.1, 'yes', 'no'))
stocks <- read.csv("~/R/Working Directory/stocks_bonds.csv")
stocks = stocks %>%
mutate(lessthan10 = ifelse('SP500' < -.1, 'yes', 'no'))
stocks = stocks %>%
mutate(lessthan10 = ifelse(SP500 > -.1, 'no', 'yes'))
stocks = stocks %>%
mutate(lessthan10 = ifelse(SP500 > -.1, 1, 2))
stocks = stocks %>%
mutate(lessthan10 = ifelse(SP500 > -.1, 1, 0))
stocks = stocks %>%
mutate(lessthan10 = ifelse(SP500 > -.1, 0, 1))
table5 = stocks %>%
summarize(p_event = sum(event==1)/n(), total = n())
table5 = stocks %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n())
table5
# contruct a bootstrapped sample
stocks_boot = resample(stocks)
table4_boot = stocks_boot %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n())
# return the result of interest
table4_boot$`p_event`
boot4 = do(1000)*{
# contruct a bootstrapped sample
stocks_boot = resample(stocks)
# recalculate the statistics for the bootstrapped sample
table4_boot = stocks_boot %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n())
# return the result of interest
table4_boot$`p_event`
}
head(boot4)
confint(boot4$result)
table5 = stocks %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n())
table5
table5 = stocks %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n(), var(p_event))
table5
table5 = stocks %>%
summarize(p_event = sum(lessthan10==1)/n(), total = n(), var(lessthan10))
table5
gasprices <- read.csv("~/R/Working Directory/gasprices.csv")
table2 = gasprices %>%
group_by(Highway) %>%
summarize(mean(Price), var(Price), n())
table2
sd = sqrt(.00576/(22^2)+.00651/(79^2))
sd
boot2 = do(1000)*{
# contruct a bootstrapped sample
gasprices_boot = resample(gasprices)
# recalculate the statistics for the bootstrapped sample
table2_boot = gasprices_boot %>%
group_by(Highway) %>%
summarize(mean(Price))
# return the result of interest
table2_boot$`mean(Price)`
}
head(boot2)
confint(boot2[,2]-boot2[,1])
sd(boot2[,2]-boot2[,1])
a <- 0
s <- .01817
n <- 101
xbar <- .05
1-pnorm(xbar, mean=a, sd=s, lower.tail = FALSE)
a <- 0
s <- .01817
n <- 101
xbar <- .0457
1-pnorm(xbar, mean=a, sd=s, lower.tail = FALSE)
a <- 0
s <- .01817
n <- 101
xbar <- .0457
pnorm(xbar, mean=a, sd=s, lower.tail = FALSE)
setwd("~/GitHub/Data-Mining-Proj-1")
library(tidyverse)
## read in the data
spamfit = read.csv('../Data/spamfit.csv')
spamtest = read.csv('../Data/spamtest.csv')
## read in the data
spamfit = read.csv('../Data/spamfit.csv')
## read in the data
spamfit = read.csv('..Data-Mining-Proj-1/Data/spamfit.csv')
setwd("~/GitHub/Data-Mining-Proj-1/Data")
## read in the data
spamfit = read.csv('..spamfit.csv')
## read in the data
spamfit = read.csv('../spamfit.csv')
## read in the data
spamfit = read.csv('spamfit.csv')
setwd("~/GitHub/Data-Mining-Proj-1")
## read in the data
spamfit = read.csv('../Data/spamfit.csv')
## read in the data
spamfit = read.csv('/Data/spamfit.csv')
## read in the data
spamfit = read.csv('../data/spamfit.csv')
## read in the data
spamfit = read.csv('data/spamfit.csv')
spamtest = read.csv('data/spamtest.csv')
lm1 = lm(y ~ log(capital.run.length.average), data=spamfit)
spamfit$lm1_pred = predict(lm1)
ggplot(data = spamfit) +
geom_jitter(aes(x=log(capital.run.length.average), y = y),
height=0.1, color='grey', alpha=0.3)
# in-sample accuracy?
yhat_train = ifelse(predict(lm1) >= 0.5, 1, 0)
table(y=spamfit$y, yhat=yhat_train)
# how well does the model predict on the data in spamtest.csv?
probhat_test = predict(lm1, newdata=spamtest)
yhat_test = ifelse(probhat_test >= 0.5, 1, 0)
table(y=spamtest$y, yhat=yhat_test)
