olympics %>%
filter(sport == "Athletics")
olympics %>%
filter(sport == "Athletics") %>%
quantile(height, =.95)
olympics %>%
filter(sport == "Athletics") %>%
quantile(height, .95)
olympics %>%
filter(sport == "Athletics")
olympics %>%
filter(sport == "Athletics") %>%
quantile($height, .95)
olympics %>%
filter(sport == "Athletics") %>%
quantile(olympics$height, .95)
olympics %>%
filter(sport == "Athletics") %>%
quantile(olympics$height, probs = c(.95))
athletics <- olympics %>%
filter(sport == "Athletics")
quantile(athletics$height, probs = c(.95))
athletics <- olympics %>%
filter(sport == "Athletics", sex == "F")
quantile(athletics$height, probs = c(.95))
athletics <- olympics %>%
filter(sport == "Athletics", sex == "F") %>%
select(id, height) %>%
unique()
quantile(athletics$height, probs = c(.95))
View(athletics)
athletics <- olympics %>%
filter(sport == "Athletics", sex == "F") %>%
select(id, height) %>%
unique()
quantile(athletics$height, probs = c(.95))
quantile(athletics$height, probs == 95)
quantile(athletics$height, probs = c(95))
quantile(athletics$height, probs = c(.95))
athletics <- olympics %>%
filter(sport == "Athletics", sex == "F") %>%
select(id, height)
quantile(athletics$height, probs = c(.95))
athletics <- olympics %>%
filter(sport == "Athletics", sex == "F") %>%
select(id, height) %>%
unique()
View(olympics)
olympics %>%
filter(sex == "F")
group_by(event) %>%
summarize(stddev = sd(height))
sddev <- olympics %>%
filter(sex == "F")
group_by(event) %>%
summarize(stddev = sd(height))
View(sddev)
sddev <- olympics %>%
filter(sex == "F") %>%
group_by(event) %>%
summarize(stddev = sd(height))
View(billboard_10week)
sddev <- olympics %>%
filter(sex == "F") %>%
group_by(event) %>%
summarize(stddev = sd(height)) %>%
arrange(desc(stddev))
olympics %>%
filter(sex == "F") %>%
group_by(event) %>%
summarize(stddev = sd(height)) %>%
arrange(desc(stddev))
sddev <- olympics %>%
filter(sex == "F") %>%
group_by(event) %>%
summarize(stddev = sd(height)) %>%
arrange(desc(stddev)) %>%
head(1)
View(billboard_top10)
View(billboard_byyear)
billboard_byyear <- billboard %>%
filter(year > 1958, year <2021) %>%
select(performer, song, year) %>%
unique() %>%
group_by(year) %>%
summarize(count = n())
ggplot(billboard_byyear) +
geom_line(aes(x=year, y=count))
billboard_10week <- billboard %>%
select(song, performer, week) %>%
group_by(song, performer) %>%
summarize(count = n()) %>%
filter(count >= 10) %>%
group_by(performer) %>%
summarize(count = n()) %>%
filter(count >= 30)
billboard_10week %>%
ggplot(aes(count, fct_reorder(performer, count))) +
geom_col() +
labs(title="Billboard Top Performers",
subtitle="Number of Songs on Billboard for at least 10 Weeks",
x="Number of Songs",
y="Artist") +
theme(plot.title.position = 'plot')
olympics %>%
group_by(year, sex) %>%
summarize(avgage = mean(age))
View(olympics)
olympics %>%
filter(sport == "Swimming") %>%
group_by(year, sex) %>%
summarize(avgage = mean(age))
avgage <- olympics %>%
filter(sport == "Swimming") %>%
group_by(year, sex) %>%
summarize(avgage = mean(age))
ggplot(avgage) +
geom_line(aes(x=year, y=avgage, color=sex))
library(tidyverse)
library(ggplot2)
library(rsample)  # for creating train/test splits
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(here)
sclass <- read_csv(here("Data/sclass.csv"))
library(tidyverse)
library(ggplot2)
library(rsample)  # for creating train/test splits
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(here)
sclass <- read_csv(here("Data/sclass.csv"))
here::i_am(C:\Users\bjwil\OneDrive\Documents\GitHub\Data-Mining-Proj-1)
here::i_am(C:/Users/bjwil/OneDrive/Documents/GitHub/Data-Mining-Proj-1)
here()
sclass <- read_csv(here("Data/sclass.csv"))
sclass <- read_csv(here("Data/sclass.csv"))
View(sclass)
sclass_clean <- sclass %>%
select(trim, mileage, price)
sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350" | trim == "65 AMG")
sclass_350 <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350")
sclass_65 <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "65 AMG")
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(loadhou_split)
sclass_350_test  = testing(loadhou_split)
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(sclass_350_split)
sclass_350_test  = testing(sclass_350_split)
sclass_350<- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350")
sclass_65 <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "65 AMG")
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(sclass_350_split)
sclass_350_test  = testing(sclass_350_split)
sclass_65_split =  initial_split(sclass_65, prop=0.9)
sclass_65_train = training(sclass_65_split)
sclass_65_test  = testing(sclass_65_split)
knn2 = knnreg(price ~ mileage, data=sclass_350_train, k=2)
rmse(knn2, sclass_350_test)
ggplot(data = sclass_350) +
geom_point(mapping = aes(x = price, y = mileage), color='darkgrey')
ggplot(data = sclass_350) +
geom_point(mapping = aes(x = price, y = mileage))
ggplot(data = sclass_65) +
geom_point(mapping = aes(x = price, y = mileage))
sclass_clean <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350" | trim = "65 AMG")
sclass_clean <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350" | trim == "65 AMG")
ggplot(data = sclass_clean) +
geom_point(mapping = aes(x = price, y = mileage)) +
facet_wrap(~ trim)
ggplot(data = sclass_clean) +
geom_point(mapping = aes(x = mileage, y = price)) +
facet_wrap(~ trim)
lm1 = lm(price ~ mileage, data=sclass_350)
lm2 = lm(price ~ poly(mileage, 2), data=sclass_350)
ggplot(data = sclass_350) +
geom_point(mapping = aes(x = mileage, y = price)) +
geom_line(lm1)
ggplot(data = sclass_350) +
geom_point(mapping = aes(x = mileage, y = price))
lm350_1 = lm(price ~ mileage, data=sclass_350)
lm350_2 = lm(price ~ poly(mileage, 2), data=sclass_350)
rmse(lm350_1)
rmse(lm350_1, sclass_350)
rmse(lm350_2, sclass_350)
lm65_1 = lm(price ~ mileage, data=sclass_65)
lm65_2 = lm(price ~ poly(mileage, 2), data=sclass_65)
rmse(lm65_1, sclass_65)
rmse(lm65_2, sclass_65)
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(sclass_350_split)
sclass_350_test  = testing(sclass_350_split)
sclass_65_split =  initial_split(sclass_65, prop=0.9)
sclass_65_train = training(sclass_65_split)
sclass_65_test  = testing(sclass_65_split)
knn_350 <- foreach(k = k_grid) %do%
knnreg(price ~ mileage, data=sclass_350_train, k=k)
k_grid = c(2, 4, 6, 8, 10, 15, 20, 25, 30, 35, 40, 45,
50, 60, 70, 80, 90, 100, 125, 150, 175, 200, 250, 300)
##
knn_350 <- foreach(k = k_grid) %do%
knnreg(price ~ mileage, data=sclass_350_train, k=k)
View(knn_350)
knn2 = knnreg(price ~ mileage, data=sclass_350_train, k=2)
View(knn2)
knn_350 <- foreach(k = k_grid, .combine='rbind') %do%
knnreg(price ~ mileage, data=sclass_350_train, k=k)
View(knn_350)
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
knnreg(price ~ mileage, data=sclass_350_train, k=k)
rmse(knn2, sclass_350_test)
}
View(knn_350)
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
knnreg(price ~ mileage, data=sclass_350_train, k=k)
rmse(knn_350, sclass_350_test)
}
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
knnreg(price ~ mileage, data=sclass_350_train, k=k)
}
rmse(knn_350, sclass_350_test)
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=2), sclass_350_test)
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=k), sclass_350_test)
}
View(knn_350)
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=2), sclass_350_test)
View(knn_350)
x <- cbind(knn_350, k_grid)
View(x)
x.set_index("k_grid")
knn350_rmse <- cbind(knn_350, k_grid)
knn350_rmse <- data.frame(knn_350, k_grid)
View(knn350_rmse)
knn350_rmse.set_index("k_grid")
rownames(knn350_rmse) <- knn350_rmse$k_grid
View(knn350_rmse)
knn350_rmse <- data.frame(knn_350, k_grid)
row.names(knn350_rmse) = NULL
ggplot(knn350_rmse) +
geom_smooth(aes(x = k_grid, y = knn_350))
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350))
k_grid = c(2, 4, 6, 8, 10, 15, 20, 25, 30, 35, 40, 45,
50, 60, 70, 80, 90, 100)
##
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=k), sclass_350_test)
}
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=2), sclass_350_test)
knn350_rmse <- data.frame(knn_350, k_grid)
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350))
k_grid = c(2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 25, 30, 35, 40, 45,
50, 60, 70, 80, 90, 100)
##
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=k), sclass_350_test)
}
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=2), sclass_350_test)
knn350_rmse <- data.frame(knn_350, k_grid)
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350))
## For 350 Trim
knn_65 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_65_train, k=k), sclass_65_test)
}
knn65_rmse <- data.frame(knn_65, k_grid)
ggplot(knn65_rmse) +
geom_line(aes(x = k_grid, y = knn_65))
library(tidyverse)
library(ggplot2)
library(rsample)  # for creating train/test splits
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(here)
sclass <- read_csv(here("Data/sclass.csv"))
## Let's take a look at the data
sclass_clean <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350" | trim == "65 AMG")
ggplot(data = sclass_clean) +
geom_point(mapping = aes(x = mileage, y = price)) +
facet_wrap(~ trim)
## Create our datasets and compare to benchmarks
sclass_350<- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350")
lm350_1 = lm(price ~ mileage, data=sclass_350)
lm350_2 = lm(price ~ poly(mileage, 2), data=sclass_350)
rmse(lm350_1, sclass_350)
rmse(lm350_2, sclass_350)
sclass_65 <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "65 AMG")
lm65_1 = lm(price ~ mileage, data=sclass_65)
lm65_2 = lm(price ~ poly(mileage, 2), data=sclass_65)
rmse(lm65_1, sclass_65)
rmse(lm65_2, sclass_65)
## Create train / test splits
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(sclass_350_split)
sclass_350_test  = testing(sclass_350_split)
sclass_65_split =  initial_split(sclass_65, prop=0.9)
sclass_65_train = training(sclass_65_split)
sclass_65_test  = testing(sclass_65_split)
k_grid = c(1:100)
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=k), sclass_350_test)
}
knn350_rmse <- data.frame(knn_350, k_grid)
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350))
knn_65 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_65_train, k=k), sclass_65_test)
}
knn65_rmse <- data.frame(knn_65, k_grid)
ggplot(knn65_rmse) +
geom_line(aes(x = k_grid, y = knn_65))
lm65_1 = lm(price ~ mileage, data=sclass_65)
lm65_2 = lm(price ~ poly(mileage, 2), data=sclass_65)
rmse(lm65_1, sclass_65)
rmse(lm65_2, sclass_65)
ggplot(knn65_rmse) +
geom_line(aes(x = k_grid, y = knn_65)) +
geom_hline(yintercept = 44953, color = 'red') +
geom_hline(yintercept = 30722, color = 'blue')
lm350_1 = lm(price ~ mileage, data=sclass_350)
lm350_2 = lm(price ~ poly(mileage, 2), data=sclass_350)
rmse(lm350_1, sclass_350)
rmse(lm350_2, sclass_350)
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350)) +
geom_hline(yintercept = 11526, color = 'red') +
geom_hline(yintercept = 10176, color = 'blue')
ggplot(knn65_rmse) +
geom_line(aes(x = k_grid, y = knn_65)) +
geom_hline(yintercept = 44953, color = 'red') +
geom_hline(yintercept = 30722, color = 'blue')
gc()
library(tidyverse)
library(ggplot2)
library(rsample)  # for creating train/test splits
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(here)
sclass <- read_csv(here("Data/sclass.csv"))
## Let's take a look at the data
sclass_clean <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350" | trim == "65 AMG")
ggplot(data = sclass_clean) +
geom_point(mapping = aes(x = mileage, y = price)) +
facet_wrap(~ trim)
## Create our datasets and compare to benchmarks
sclass_350<- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "350")
lm350_1 = lm(price ~ mileage, data=sclass_350)
lm350_2 = lm(price ~ poly(mileage, 2), data=sclass_350)
rmse(lm350_1, sclass_350)
rmse(lm350_2, sclass_350)
sclass_65 <- sclass %>%
select(trim, mileage, price) %>%
filter(trim == "65 AMG")
lm65_1 = lm(price ~ mileage, data=sclass_65)
lm65_2 = lm(price ~ poly(mileage, 2), data=sclass_65)
rmse(lm65_1, sclass_65)
rmse(lm65_2, sclass_65)
## Create train / test splits
sclass_350_split =  initial_split(sclass_350, prop=0.9)
sclass_350_train = training(sclass_350_split)
sclass_350_test  = testing(sclass_350_split)
sclass_65_split =  initial_split(sclass_65, prop=0.9)
sclass_65_train = training(sclass_65_split)
sclass_65_test  = testing(sclass_65_split)
## Define a series of k values
k_grid = c(1:100)
## Run a loop to determine the RMSE for each value of k.
## For 350 Trim
knn_350 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_350_train, k=k), sclass_350_test)
}
knn350_rmse <- data.frame(knn_350, k_grid)
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350)) +
geom_hline(yintercept = 11526, color = 'red') +
geom_hline(yintercept = 10176, color = 'blue')
## For 350 Trim
knn_65 <- foreach(k = k_grid, .combine='rbind') %do% {
rmse(knnreg(price ~ mileage, data=sclass_65_train, k=k), sclass_65_test)
}
knn65_rmse <- data.frame(knn_65, k_grid)
ggplot(knn65_rmse) +
geom_line(aes(x = k_grid, y = knn_65)) +
geom_hline(yintercept = 44953, color = 'red') +
geom_hline(yintercept = 30722, color = 'blue')
ggplot(knn350_rmse) +
geom_line(aes(x = k_grid, y = knn_350)) +
geom_hline(yintercept = 11526, color = 'red') +
geom_hline(yintercept = 10176, color = 'blue')
View(knn65_rmse)
View(knn350_rmse)
knnreg(price ~ mileage, data=sclass_350_train, k=20)
knn350_20 <-
knnreg(price ~ mileage, data=sclass_350_train, k=20)
View(knn_350)
View(knn350_20)
sclass_350_test = sclass_350_test %>%
mutate(price_pred = predict(knn350_20, sclass_350_test))
ggplot(data = sclass_350_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
geom_line(aes(x = mileage, y = price_pred), color='red', size=1.5)
library(tidyverse)
library(ggplot2)
library(modelr)
library(rsample)
library(mosaic)
data(SaratogaHouses)
glimpse(SaratogaHouses)
# Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
lm1 = lm(price ~ lotSize + bedrooms + bathrooms, data=saratoga_train)
lm2 = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
lm3 = lm(price ~ (. - pctCollege - sewer - waterfront - landValue - newConstruction)^2, data=saratoga_train)
coef(lm1) %>% round(0)
coef(lm1) %>% round(0)
coef(lm2) %>% round(0)
coef(lm3) %>% round(0)
rmse(lm1, saratoga_test)
rmse(lm2, saratoga_test)
rmse(lm3, saratoga_test)
rmse(lm1, saratoga_test)
rmse(lm2, saratoga_test)
rmse(lm3, saratoga_test)
# Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
# Fit to the training data
# Sometimes it's easier to name the variables we want to leave out
# The command below yields exactly the same model.
# the dot (.) means "all variables not named"
# the minus (-) means "exclude this variable"
lm1 = lm(price ~ lotSize + bedrooms + bathrooms, data=saratoga_train)
lm2 = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
lm3 = lm(price ~ (. - pctCollege - sewer - waterfront - landValue - newConstruction)^2, data=saratoga_train)
coef(lm1) %>% round(0)
coef(lm2) %>% round(0)
coef(lm3) %>% round(0)
# Predictions out of sample
# Root mean squared error
rmse(lm1, saratoga_test)
rmse(lm2, saratoga_test)
rmse(lm3, saratoga_test)
# the dot (.) means "all variables not named"
# the minus (-) means "exclude this variable"
lm1 = lm(price ~ lotSize + bedrooms + bathrooms, data=saratoga_train)
lm2 = lm(price ~ . - pctCollege - sewer - waterfront - landValue - newConstruction, data=saratoga_train)
lm3 = lm(price ~ (. - pctCollege - sewer - waterfront - landValue - newConstruction)^2, data=saratoga_train)
rmse(lm1, saratoga_test)
rmse(lm2, saratoga_test)
rmse(lm3, saratoga_test)
library(tidyverse)
library(mosaic)
library(airportr)
library(dplyr)
library(usmap)
library(maptools)
library(ggplot2)
library(rgdal)
library(viridis)
ABIA <- read.csv(here("Data/ABIA.csv"))
library(here)
ABIA <- read.csv(here("Data/ABIA.csv"))
View(ABIA)
ABIA_stats = ABIA %>%
filter(Origin == 'AUS') %>%
group_by(Dest) %>%
summarize(count = n(),
mean_arr_delay = mean(ArrDelay, na.rm=TRUE)) %>%
filter(count > 99)
View(ABIA_stats)
ABIA_airlines = ABIA %>%
filter(Origin == 'AUS') %>%
group_by(UniqueCarrier) %>%
summarize(count = n())
View(ABIA_airlines)
